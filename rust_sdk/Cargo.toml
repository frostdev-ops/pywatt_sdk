[package]
name = "pywatt_sdk"
version = "0.5.2"
edition = "2021"
authors = ["James Kueller <james@pma-electric.com>"]
description = "Standardized SDK for building PyWatt modules in Rust"
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/frostdev-ops/pywatt_sdk"
homepage = "https://github.com/frostdev-ops/pywatt_sdk"
documentation = "https://docs.rs/pywatt_sdk"
keywords = ["ipc", "sdk", "pywatt"]
categories = ["development-tools", "network-programming"]
publish = true

[dependencies]
# Dependencies from pywatt_sdk itself
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.17", features = ["env-filter", "json"] }
tokio = { version = "1.45.1", features = ["full"] }
tokio-stream = { version = "0.1.17", features = ["net"] }
axum = { version = "0.8.4" }
hyper = { version = "1.6.0", features = ["full"] }
http = { version = "1.3.1" }
thiserror = "2.0.12"
serde_json = "1.0.103"
serde = { version = "1.0.175", features = ["derive"] }
secrecy = { version = "0.10.3", features = ["serde"] }
prometheus = { version = "0.14.0", optional = true }
jsonwebtoken = { version = "9.3.1", optional = true }
tower = { version = "0.5.2", features = ["util"] }
base64 = "0.22.1"
lazy_static = "1.4.0"
uuid = { version = "1.4.1", features = ["v4", "serde"] }
bincode = { version = "2.0.0-rc.3", features = ["derive"], optional = true }
url = { version = "2.4.0", optional = true }

# TLS and TCP networking dependencies
rustls = { version = "0.23.27", features = ["tls12"], optional = true }
rustls-pemfile = { version = "2.1.1", optional = true }
tokio-rustls = { version = "0.26.2", optional = true }
tokio-native-tls = { version = "0.3.1", optional = true }
webpki-roots = { version = "1.0.0", optional = true }

# Database dependencies (optional)
sqlx = { version = "0.8.5", features = ["runtime-tokio-rustls", "macros", "json", "chrono", "uuid"], optional = true }

# Cache dependencies (optional)
redis = { version = "0.32.0", features = ["tokio-comp", "connection-manager"], optional = true }
memcache = { version = "0.18.0", optional = true }
dashmap = "6.1.0"
fs2 = { version = "0.4.3", optional = true }
tempfile = { version = "3.8.0", optional = true }

# Dependencies moved from secret_client
once_cell = "1.18"
aho-corasick = "1.1.3"
zeroize = "1.5"

# Dependencies moved from secret_provider
async-trait = "0.1.73"
anyhow = "1.0"
notify = { version = "8.0.0", default-features = false, features = ["serde"] }
toml = "0.8"
metrics = { version = "0.24.2", optional = true }
clap = { version = "4.4", features = ["derive"] }
serde_yaml = "0.9"

# Proc-macro dependencies moved from pywatt_macros (conditional)
pywatt_macros = { path = "pywatt_macros", version = "0.2.9", optional = true }
tower-service = "0.3.3"
futures = "0.3.31"
hyper-util = { version = "0.1.11", features = ["server", "tokio"] }
rand = "0.9.1"

# Added dependency
http-body-util = "0.1.3"
http-body = "1.0"
chrono = "0.4"

# Advanced communication features dependencies
flate2 = { version = "1.0", optional = true }
crc32fast = { version = "1.3", optional = true }
fastrand = { version = "2.0", optional = true }

[build-dependencies]
chrono = "0.4"

[features]
default = ["tcp", "ipc_channel", "bincode_serialization", "test_utils"]
proc_macros = ["pywatt_macros"]
router_ext = []
metrics = ["router_ext", "prometheus", "dep:metrics"]
discover_endpoints = []
builder = []
jwt_auth = ["jsonwebtoken"]
database = ["sqlx"]
postgres = ["database", "sqlx/postgres"]
mysql = ["database", "sqlx/mysql"]
sqlite = ["database", "sqlx/sqlite"]
cache = []
redis_cache = ["cache", "redis"]
memcached = ["cache", "memcache"]
file_cache = ["cache", "fs2", "tempfile"]
ipc = []
tcp = ["dep:url", "tokio/net"]
tls = ["tcp", "rustls", "rustls-pemfile", "tokio-rustls", "webpki-roots"]
native_tls = ["tcp", "tokio-native-tls"]
integration_tests = []
jwt_auth_v2 = ["jwt_auth"]
tracing = []
cors = []
bincode_serialization = ["bincode"]
secret_client_logging = []
macros = ["proc_macros"]
ipc_channel = ["tcp", "dep:url"]
test_utils = ["fastrand"]

# Advanced communication features
advanced_routing = ["bincode"]
advanced_failover = ["flate2", "fastrand"]
advanced_metrics = ["metrics"]
advanced_streaming = ["flate2", "crc32fast", "bincode"]
advanced_features = ["advanced_routing", "advanced_failover", "advanced_metrics", "advanced_streaming"]
