[build-system]
requires = ["setuptools>=45.0", "wheel>=0.37.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pywatt-sdk"
version = "0.3.0"
description = "Python SDK for PyWatt modules"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "PyWatt Team", email = "team@pywatt.io"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "structlog>=23.1.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.24.0",
    "websockets>=11.0.0",
    "orjson>=3.8.0",
    "cryptography>=41.0.0",
    "pyjwt>=2.8.0",
    "msgpack>=1.0.7",
]

[project.optional-dependencies]
# Framework integrations
fastapi = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
]
flask = [
    "flask>=2.3.0",
    "gunicorn>=21.0.0",
]

# Development and testing
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.4.0",
]

# All features
all = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "flask>=2.3.0",
    "gunicorn>=21.0.0",
    "prometheus-client>=0.17.0",
    "psutil>=5.9.0",
    "anyio>=3.7.0",
]

[project.urls]
Homepage = "https://github.com/pywatt/pywatt-sdk-python"
Documentation = "https://docs.pywatt.io/python-sdk"
Repository = "https://github.com/pywatt/pywatt-sdk-python"
Issues = "https://github.com/pywatt/pywatt-sdk-python/issues"

[tool.setuptools]
packages = [
    "pywatt_sdk",
    "pywatt_sdk.core",
    "pywatt_sdk.communication", 
    "pywatt_sdk.security",
    "pywatt_sdk.data",
    "pywatt_sdk.services",
    "pywatt_sdk.services.model_manager",
    "pywatt_sdk.services.model_manager.adapters",
    "pywatt_sdk.internal",
    "pywatt_sdk.pywatt_cli",
]

[tool.setuptools.package-dir]
pywatt_sdk = "."
"pywatt_sdk.core" = "core"
"pywatt_sdk.communication" = "communication"
"pywatt_sdk.security" = "security"
"pywatt_sdk.data" = "data"
"pywatt_sdk.services" = "services"
"pywatt_sdk.services.model_manager" = "services/model_manager"
"pywatt_sdk.services.model_manager.adapters" = "services/model_manager/adapters"
"pywatt_sdk.internal" = "internal"
"pywatt_sdk.pywatt_cli" = "pywatt_cli"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["pywatt_sdk"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 